"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rps__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "CreatedGame",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "GameDraw",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "JoinedGameOf",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "PaidOut",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "RemovedGame",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                indexed: false,
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "WonGameAgainst",
        type: "event",
    },
    {
        inputs: [],
        name: "MIN_ENTRY_FEE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "REVEAL_TIMEOUT",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "TAX_PERCENT",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "mintEntryFee",
                type: "uint256",
            },
        ],
        name: "changeMinEntryFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "revealTimeout",
                type: "uint32",
            },
        ],
        name: "changeRevealTimeout",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "taxPercent",
                type: "uint8",
            },
        ],
        name: "changeTaxPercent",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum Rps.Choices",
                name: "p1Choice",
                type: "uint8",
            },
            {
                internalType: "enum Rps.Choices",
                name: "p2Choice",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "p1",
                type: "address",
            },
            {
                internalType: "address",
                name: "p2",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "entryFee",
                type: "uint256",
            },
        ],
        name: "chooseWinner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "clearChoice",
                type: "string",
            },
        ],
        name: "getChoiceFromStr",
        outputs: [
            {
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "getGame",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "entryFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "p1SaltedChoice",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "p2",
                        type: "address",
                    },
                    {
                        internalType: "enum Rps.Choices",
                        name: "p2Choice",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "timerStart",
                        type: "uint256",
                    },
                ],
                internalType: "struct Rps.Game",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "getGameEntryFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hashChoice",
                type: "bytes32",
            },
            {
                internalType: "string",
                name: "clearChoice",
                type: "string",
            },
        ],
        name: "getHashChoice",
        outputs: [
            {
                internalType: "enum Rps.Choices",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "getTimeLeft",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "p1",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
            {
                internalType: "enum Rps.Choices",
                name: "p2Choice",
                type: "uint8",
            },
        ],
        name: "joinGame",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "player",
                type: "address",
            },
        ],
        name: "listGames",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "entryFee",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "p1SaltedChoice",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "p2",
                        type: "address",
                    },
                    {
                        internalType: "enum Rps.Choices",
                        name: "p2Choice",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "timerStart",
                        type: "uint256",
                    },
                ],
                internalType: "struct Rps.Game[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "encChoice",
                type: "bytes32",
            },
        ],
        name: "makeGame",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "winner",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "initalBet",
                type: "uint256",
            },
        ],
        name: "payoutWithAppliedTax",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rcv",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "p1",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "removeGame",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "p1",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "removeGameP1",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
            {
                internalType: "string",
                name: "movePw",
                type: "string",
            },
        ],
        name: "resolveGameP1",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "p1",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "gameId",
                type: "uint8",
            },
        ],
        name: "resolveGameP2",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080604052662386f26fc100006000556005600160006101000a81548160ff021916908360ff1602179055506202a3006001806101000a81548163ffffffff021916908363ffffffff16021790555034801561005a57600080fd5b50612f728061006a6000396000f3fe6080604052600436106101355760003560e01c80637f9b19a7116100ab5780639e9235d01161006f5780639e9235d01461041c578063d39980da14610438578063d8fd609314610461578063ddbc9e201461048a578063ebb744e1146104b3578063fd177667146104dc57610135565b80637f9b19a71461035857806381883759146103815780638411f44f146103ac57806385c839aa146103d55780639cd091251461041257610135565b8063442ba89f116100fd578063442ba89f14610212578063458f7caa1461024f578063468bc93a1461028c5780636b4b6999146102c9578063701fe18b146102f25780637aff83fd1461032f57610135565b80630ba67e891461013a57806312065fe014610177578063216523a9146101a25780632e5e5b15146101cb5780633d6ae3a7146101e7575b600080fd5b34801561014657600080fd5b50610161600480360381019061015c919061229b565b610507565b60405161016e919061235f565b60405180910390f35b34801561018357600080fd5b5061018c6105db565b6040516101999190612393565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190612445565b6105e3565b005b6101e560048036038101906101e091906124bb565b610913565b005b3480156101f357600080fd5b506101fc610b01565b6040516102099190612507565b60405180910390f35b34801561021e57600080fd5b5061023960048036038101906102349190612522565b610b15565b60405161024691906126a2565b60405180910390f35b34801561025b57600080fd5b5061027660048036038101906102719190612445565b610c62565b6040516102839190612393565b60405180910390f35b34801561029857600080fd5b506102b360048036038101906102ae9190612445565b610dde565b6040516102c09190612393565b60405180910390f35b3480156102d557600080fd5b506102f060048036038101906102eb91906126f0565b610dfb565b005b3480156102fe57600080fd5b5061031960048036038101906103149190612445565b610eae565b6040516103269190612785565b60405180910390f35b34801561033b57600080fd5b50610356600480360381019061035191906127a0565b611062565b005b34801561036457600080fd5b5061037f600480360381019061037a91906127f9565b611110565b005b34801561038d57600080fd5b506103966111aa565b6040516103a39190612393565b60405180910390f35b3480156103b857600080fd5b506103d360048036038101906103ce9190612826565b6111b0565b005b3480156103e157600080fd5b506103fc60048036038101906103f79190612866565b611318565b604051610409919061235f565b60405180910390f35b61041a61141d565b005b610436600480360381019061043191906128eb565b61141f565b005b34801561044457600080fd5b5061045f600480360381019061045a9190612445565b6117e8565b005b34801561046d57600080fd5b5061048860048036038101906104839190612445565b611945565b005b34801561049657600080fd5b506104b160048036038101906104ac919061293e565b611c77565b005b3480156104bf57600080fd5b506104da60048036038101906104d5919061299e565b611d6f565b005b3480156104e857600080fd5b506104f1612192565b6040516104fe9190612a28565b60405180910390f35b6000808383600081811061051e5761051d612a43565b5b9050013560f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105615760009150506105d5565b603160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105985760019150506105d5565b603260f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105cf5760029150506105d5565b60039150505b92915050565b600047905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600381526020017f637267000000000000000000000000000000000000000000000000000000000081525090610689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106809190612b0b565b60405180910390fd5b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006106d98484610eae565b905081600183805490506106ed9190612b5c565b815481106106fe576106fd612a43565b5b9060005260206000209060040201828460ff168154811061072257610721612a43565b5b906000526020600020906004020160008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160149054906101000a900460ff168160020160146101000a81548160ff021916908360038111156107e3576107e26122e8565b5b0217905550600382015481600301559050508180548061080657610805612b90565b5b600190038181906000526020600020906004020160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff0219169055600382016000905550509055600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16146108bd576108bc816040015182600001516111b0565b5b8373ffffffffffffffffffffffffffffffffffffffff167fad5886e11c6397c465478a76faf9eeda7d20e573dc2acd0955c54f4b51a208e98442604051610905929190612bbf565b60405180910390a250505050565b6000543410156040518060400160405280600381526020017f61746c000000000000000000000000000000000000000000000000000000000081525090610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109879190612b0b565b60405180910390fd5b506109996121d2565b3481600001818152505081816020018181525050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836003811115610a9c57610a9b6122e8565b5b02179055506080820151816003015550503373ffffffffffffffffffffffffffffffffffffffff167f0bb8b3c1699d88c3b6dec18d63fc02f194b610b760b178b7292b481906b3ad663442604051610af5929190612be8565b60405180910390a25050565b60018054906101000a900463ffffffff1681565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c5757838290600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166003811115610c2857610c276122e8565b5b6003811115610c3a57610c396122e8565b5b815260200160038201548152505081526020019060010190610b76565b505050509050919050565b600080610c6f8484610eae565b9050610c7e81608001516121a5565b156040518060400160405280600281526020017f746600000000000000000000000000000000000000000000000000000000000081525090610cf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ced9190612b0b565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e6174000000000000000000000000000000000000000000000000000000000081525090610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a9190612b0b565b60405180910390fd5b50806080015142610db49190612b5c565b60018054906101000a900463ffffffff1663ffffffff16610dd59190612b5c565b91505092915050565b600080610deb8484610eae565b9050806000015191505092915050565b600160059054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8290612c5d565b60405180910390fd5b806001806101000a81548163ffffffff021916908363ffffffff16021790555050565b610eb66121d2565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508260ff168180549050116040518060400160405280600481526020017f696f6f620000000000000000000000000000000000000000000000000000000081525090610f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f719190612b0b565b60405180910390fd5b50808360ff1681548110610f9157610f90612a43565b5b90600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166003811115611039576110386122e8565b5b600381111561104b5761104a6122e8565b5b815260200160038201548152505091505092915050565b600160059054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e990612c5d565b60405180910390fd5b80600160006101000a81548160ff021916908360ff16021790555050565b600160059054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119790612c5d565b60405180910390fd5b8060008190555050565b60005481565b6000600160009054906101000a900460ff1660ff1660646002846111d49190612c7d565b6111de9190612d06565b6111e89190612c7d565b6002836111f59190612c7d565b6111ff9190612b5c565b90508047116040518060400160405280600581526020017f6e656d69630000000000000000000000000000000000000000000000000000008152509061127b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112729190612b0b565b60405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156112c2573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff167f7ca7469714f3e1d8732b3a67b0599fba3be82b826137fcfa805c19afc2b20aeb824260405161130b929190612be8565b60405180910390a2505050565b60008060028484604051602001611330929190612d76565b60405160208183030381529060405260405161134c9190612dd6565b602060405180830381855afa158015611369573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061138c9190612e02565b90508085146040518060400160405280600281526020017f697000000000000000000000000000000000000000000000000000000000000081525090611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff9190612b0b565b60405180910390fd5b506114138484610507565b9150509392505050565b565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f636a670000000000000000000000000000000000000000000000000000000000815250906114c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bd9190612b0b565b60405180910390fd5b506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508260ff168180549050116040518060400160405280600481526020017f696f6f62000000000000000000000000000000000000000000000000000000008152509061158b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115829190612b0b565b60405180910390fd5b506000818460ff16815481106115a4576115a3612a43565b5b90600052602060002090600402019050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600381526020017f636a6700000000000000000000000000000000000000000000000000000000008152509061167f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116769190612b0b565b60405180910390fd5b5080600001543410156040518060400160405280600381526020017f61746c0000000000000000000000000000000000000000000000000000000000815250906116ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f69190612b0b565b60405180910390fd5b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160020160146101000a81548160ff0219169083600381111561176a576117696122e8565b5b02179055504281600301819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f70fc8cbbf6bf1c3929b063284d69be02695d9de0c6a918f74b2277d81ee28c4b8634426040516117d993929190612e6a565b60405180910390a35050505050565b60006117f48383610eae565b9050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e73700000000000000000000000000000000000000000000000000000000000815250906118a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118999190612b0b565b60405180910390fd5b506118b081608001516121a5565b6040518060400160405280600381526020017f747372000000000000000000000000000000000000000000000000000000000081525090611927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191e9190612b0b565b60405180910390fd5b506119328383611945565b6119403382600001516111b0565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905014156040518060400160405280600381526020017f637267000000000000000000000000000000000000000000000000000000000081525090611a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ff9190612b0b565b60405180910390fd5b508160ff168180549050116040518060400160405280600481526020017f696f6f620000000000000000000000000000000000000000000000000000000081525090611a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a819190612b0b565b60405180910390fd5b508060018280549050611a9d9190612b5c565b81548110611aae57611aad612a43565b5b9060005260206000209060040201818360ff1681548110611ad257611ad1612a43565b5b906000526020600020906004020160008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160149054906101000a900460ff168160020160146101000a81548160ff02191690836003811115611b9357611b926122e8565b5b02179055506003820154816003015590505080805480611bb657611bb5612b90565b5b600190038181906000526020600020906004020160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff02191690556003820160009055505090558273ffffffffffffffffffffffffffffffffffffffff167fad5886e11c6397c465478a76faf9eeda7d20e573dc2acd0955c54f4b51a208e98342604051611c6a929190612bbf565b60405180910390a2505050565b6000611c833385610eae565b9050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e7370000000000000000000000000000000000000000000000000000000000081525090611d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d289190612b0b565b60405180910390fd5b506000611d4382602001518585611318565b9050611d4f3386611945565b611d688183606001513385604001518660000151611d6f565b5050505050565b836003811115611d8257611d816122e8565b5b856003811115611d9557611d946122e8565b5b03611e3657611db083600283611dab9190612d06565b6111b0565b611dc682600283611dc19190612d06565b6111b0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f0b9941cef1aa10b842b624e5965581bafc13a2025e1030cf301a233a74ce07ec87878542604051611e299493929190612ea1565b60405180910390a361218b565b60016003811115611e4a57611e496122e8565b5b856003811115611e5d57611e5c6122e8565b5b148015611e8e575060006003811115611e7957611e786122e8565b5b846003811115611e8c57611e8b6122e8565b5b145b80611eed575060006003811115611ea857611ea76122e8565b5b856003811115611ebb57611eba6122e8565b5b148015611eec575060026003811115611ed757611ed66122e8565b5b846003811115611eea57611ee96122e8565b5b145b5b80611f4c575060026003811115611f0757611f066122e8565b5b856003811115611f1a57611f196122e8565b5b148015611f4b575060016003811115611f3657611f356122e8565b5b846003811115611f4957611f486122e8565b5b145b5b15611fcb57611f5b83826111b0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec87878542604051611fbe9493929190612ea1565b60405180910390a361218b565b600380811115611fde57611fdd6122e8565b5b856003811115611ff157611ff06122e8565b5b036120705761200082826111b0565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec868885426040516120639493929190612ea1565b60405180910390a361218b565b600380811115612083576120826122e8565b5b846003811115612096576120956122e8565b5b03612115576120a583826111b0565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec878785426040516121089493929190612ea1565b60405180910390a361218b565b61211f82826111b0565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec868885426040516121829493929190612ea1565b60405180910390a35b5050505050565b600160009054906101000a900460ff1681565b600060018054906101000a900463ffffffff1663ffffffff16826121c99190612ee6565b42119050919050565b6040518060a001604052806000815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600381111561221f5761221e6122e8565b5b8152602001600081525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261225b5761225a612236565b5b8235905067ffffffffffffffff8111156122785761227761223b565b5b60208301915083600182028301111561229457612293612240565b5b9250929050565b600080602083850312156122b2576122b161222c565b5b600083013567ffffffffffffffff8111156122d0576122cf612231565b5b6122dc85828601612245565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612328576123276122e8565b5b50565b600081905061233982612317565b919050565b60006123498261232b565b9050919050565b6123598161233e565b82525050565b60006020820190506123746000830184612350565b92915050565b6000819050919050565b61238d8161237a565b82525050565b60006020820190506123a86000830184612384565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123d9826123ae565b9050919050565b6123e9816123ce565b81146123f457600080fd5b50565b600081359050612406816123e0565b92915050565b600060ff82169050919050565b6124228161240c565b811461242d57600080fd5b50565b60008135905061243f81612419565b92915050565b6000806040838503121561245c5761245b61222c565b5b600061246a858286016123f7565b925050602061247b85828601612430565b9150509250929050565b6000819050919050565b61249881612485565b81146124a357600080fd5b50565b6000813590506124b58161248f565b92915050565b6000602082840312156124d1576124d061222c565b5b60006124df848285016124a6565b91505092915050565b600063ffffffff82169050919050565b612501816124e8565b82525050565b600060208201905061251c60008301846124f8565b92915050565b6000602082840312156125385761253761222c565b5b6000612546848285016123f7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6125848161237a565b82525050565b61259381612485565b82525050565b6125a2816123ce565b82525050565b6125b18161233e565b82525050565b60a0820160008201516125cd600085018261257b565b5060208201516125e0602085018261258a565b5060408201516125f36040850182612599565b50606082015161260660608501826125a8565b506080820151612619608085018261257b565b50505050565b600061262b83836125b7565b60a08301905092915050565b6000602082019050919050565b600061264f8261254f565b612659818561255a565b93506126648361256b565b8060005b8381101561269557815161267c888261261f565b975061268783612637565b925050600181019050612668565b5085935050505092915050565b600060208201905081810360008301526126bc8184612644565b905092915050565b6126cd816124e8565b81146126d857600080fd5b50565b6000813590506126ea816126c4565b92915050565b6000602082840312156127065761270561222c565b5b6000612714848285016126db565b91505092915050565b60a082016000820151612733600085018261257b565b506020820151612746602085018261258a565b5060408201516127596040850182612599565b50606082015161276c60608501826125a8565b50608082015161277f608085018261257b565b50505050565b600060a08201905061279a600083018461271d565b92915050565b6000602082840312156127b6576127b561222c565b5b60006127c484828501612430565b91505092915050565b6127d68161237a565b81146127e157600080fd5b50565b6000813590506127f3816127cd565b92915050565b60006020828403121561280f5761280e61222c565b5b600061281d848285016127e4565b91505092915050565b6000806040838503121561283d5761283c61222c565b5b600061284b858286016123f7565b925050602061285c858286016127e4565b9150509250929050565b60008060006040848603121561287f5761287e61222c565b5b600061288d868287016124a6565b935050602084013567ffffffffffffffff8111156128ae576128ad612231565b5b6128ba86828701612245565b92509250509250925092565b600481106128d357600080fd5b50565b6000813590506128e5816128c6565b92915050565b6000806000606084860312156129045761290361222c565b5b6000612912868287016123f7565b935050602061292386828701612430565b9250506040612934868287016128d6565b9150509250925092565b6000806000604084860312156129575761295661222c565b5b600061296586828701612430565b935050602084013567ffffffffffffffff81111561298657612985612231565b5b61299286828701612245565b92509250509250925092565b600080600080600060a086880312156129ba576129b961222c565b5b60006129c8888289016128d6565b95505060206129d9888289016128d6565b94505060406129ea888289016123f7565b93505060606129fb888289016123f7565b9250506080612a0c888289016127e4565b9150509295509295909350565b612a228161240c565b82525050565b6000602082019050612a3d6000830184612a19565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015612aac578082015181840152602081019050612a91565b83811115612abb576000848401525b50505050565b6000601f19601f8301169050919050565b6000612add82612a72565b612ae78185612a7d565b9350612af7818560208601612a8e565b612b0081612ac1565b840191505092915050565b60006020820190508181036000830152612b258184612ad2565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b678261237a565b9150612b728361237a565b925082821015612b8557612b84612b2d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000604082019050612bd46000830185612a19565b612be16020830184612384565b9392505050565b6000604082019050612bfd6000830185612384565b612c0a6020830184612384565b9392505050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6000612c47601583612a7d565b9150612c5282612c11565b602082019050919050565b60006020820190508181036000830152612c7681612c3a565b9050919050565b6000612c888261237a565b9150612c938361237a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ccc57612ccb612b2d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612d118261237a565b9150612d1c8361237a565b925082612d2c57612d2b612cd7565b5b828204905092915050565b600081905092915050565b82818337600083830152505050565b6000612d5d8385612d37565b9350612d6a838584612d42565b82840190509392505050565b6000612d83828486612d51565b91508190509392505050565b600081519050919050565b600081905092915050565b6000612db082612d8f565b612dba8185612d9a565b9350612dca818560208601612a8e565b80840191505092915050565b6000612de28284612da5565b915081905092915050565b600081519050612dfc8161248f565b92915050565b600060208284031215612e1857612e1761222c565b5b6000612e2684828501612ded565b91505092915050565b6000819050919050565b6000612e54612e4f612e4a8461240c565b612e2f565b61237a565b9050919050565b612e6481612e39565b82525050565b6000606082019050612e7f6000830186612e5b565b612e8c6020830185612384565b612e996040830184612384565b949350505050565b6000608082019050612eb66000830187612350565b612ec36020830186612350565b612ed06040830185612384565b612edd6060830184612384565b95945050505050565b6000612ef18261237a565b9150612efc8361237a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f3157612f30612b2d565b5b82820190509291505056fea264697066735822122012390a4fef902d0178082d81da16b5decfaece4cf04c8501aa0864940b6daa8d64736f6c634300080f0033";
const isSuperArgs = (xs) => xs.length > 1;
class Rps__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Rps__factory = Rps__factory;
