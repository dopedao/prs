/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { RPS, RPSInterface } from "../../contracts/RPS";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "CreatedGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "GameDraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "JoinedGameOf",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "RemovedGame",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "WonGameAgainst",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_ENTRY_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVEAL_TIMEOUT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TAX_PERCENT",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintEntryFee",
        type: "uint256",
      },
    ],
    name: "changeMinEntryFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "revealTimeout",
        type: "uint32",
      },
    ],
    name: "changeRevealTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "taxPercent",
        type: "uint8",
      },
    ],
    name: "changeTaxPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RPS.Choices",
        name: "p1Choice",
        type: "uint8",
      },
      {
        internalType: "enum RPS.Choices",
        name: "p2Choice",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "p1",
        type: "address",
      },
      {
        internalType: "address",
        name: "p2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "chooseWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "clearChoice",
        type: "string",
      },
    ],
    name: "getChoiceFromStr",
    outputs: [
      {
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "p1SaltedChoice",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "p2",
            type: "address",
          },
          {
            internalType: "enum RPS.Choices",
            name: "p2Choice",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timerStart",
            type: "uint256",
          },
        ],
        internalType: "struct RPS.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "getGameEntryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashChoice",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "clearChoice",
        type: "string",
      },
    ],
    name: "getHashChoice",
    outputs: [
      {
        internalType: "enum RPS.Choices",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "getTimeLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "p1",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
      {
        internalType: "enum RPS.Choices",
        name: "p2Choice",
        type: "uint8",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "listGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "entryFee",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "p1SaltedChoice",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "p2",
            type: "address",
          },
          {
            internalType: "enum RPS.Choices",
            name: "p2Choice",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timerStart",
            type: "uint256",
          },
        ],
        internalType: "struct RPS.Game[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "encChoice",
        type: "bytes32",
      },
    ],
    name: "makeGame",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBet",
        type: "uint256",
      },
    ],
    name: "payoutWithAppliedTax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rcv",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "p1",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "removeGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "p1",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "removeGameP1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "movePw",
        type: "string",
      },
    ],
    name: "resolveGameP1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "p1",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "gameId",
        type: "uint8",
      },
    ],
    name: "resolveGameP2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc100006001556005600260006101000a81548160ff021916908360ff1602179055506202a300600260016101000a81548163ffffffff021916908363ffffffff1602179055503480156200005c57600080fd5b506200007d620000716200008360201b60201c565b6200008b60201b60201c565b6200014f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b613144806200015f6000396000f3fe6080604052600436106101665760003560e01c80637f9b19a7116100d15780639e9235d01161008a578063ddbc9e2011610064578063ddbc9e20146104fd578063ebb744e114610526578063f2fde38b1461054f578063fd1776671461057857610166565b80639e9235d01461048f578063d39980da146104ab578063d8fd6093146104d457610166565b80637f9b19a7146103a057806381883759146103c95780638411f44f146103f457806385c839aa1461041d5780638da5cb5b1461045a5780639cd091251461048557610166565b8063458f7caa11610123578063458f7caa14610280578063468bc93a146102bd5780636b4b6999146102fa578063701fe18b14610323578063715018a6146103605780637aff83fd1461037757610166565b80630ba67e891461016b57806312065fe0146101a8578063216523a9146101d35780632e5e5b15146101fc5780633d6ae3a714610218578063442ba89f14610243575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d91906123b1565b6105a3565b60405161019f9190612475565b60405180910390f35b3480156101b457600080fd5b506101bd610677565b6040516101ca91906124a9565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f5919061255b565b61067f565b005b610216600480360381019061021191906125d1565b6109af565b005b34801561022457600080fd5b5061022d610b9d565b60405161023a919061261d565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190612638565b610bb3565b60405161027791906127b8565b60405180910390f35b34801561028c57600080fd5b506102a760048036038101906102a2919061255b565b610d00565b6040516102b491906124a9565b60405180910390f35b3480156102c957600080fd5b506102e460048036038101906102df919061255b565b610e7e565b6040516102f191906124a9565b60405180910390f35b34801561030657600080fd5b50610321600480360381019061031c9190612806565b610e9b565b005b34801561032f57600080fd5b5061034a6004803603810190610345919061255b565b610ec7565b604051610357919061289b565b60405180910390f35b34801561036c57600080fd5b5061037561107b565b005b34801561038357600080fd5b5061039e600480360381019061039991906128b6565b61108f565b005b3480156103ac57600080fd5b506103c760048036038101906103c2919061290f565b6110b5565b005b3480156103d557600080fd5b506103de6110c7565b6040516103eb91906124a9565b60405180910390f35b34801561040057600080fd5b5061041b6004803603810190610416919061293c565b6110cd565b005b34801561042957600080fd5b50610444600480360381019061043f919061297c565b611236565b6040516104519190612475565b60405180910390f35b34801561046657600080fd5b5061046f61133b565b60405161047c91906129eb565b60405180910390f35b61048d611364565b005b6104a960048036038101906104a49190612a2b565b611366565b005b3480156104b757600080fd5b506104d260048036038101906104cd919061255b565b61172f565b005b3480156104e057600080fd5b506104fb60048036038101906104f6919061255b565b61188c565b005b34801561050957600080fd5b50610524600480360381019061051f9190612a7e565b611bbe565b005b34801561053257600080fd5b5061054d60048036038101906105489190612ade565b611cb6565b005b34801561055b57600080fd5b5061057660048036038101906105719190612638565b6120d9565b005b34801561058457600080fd5b5061058d61215c565b60405161059a9190612b68565b60405180910390f35b600080838360008181106105ba576105b9612b83565b5b9050013560f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036105fd576000915050610671565b603160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610634576001915050610671565b603260f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361066b576002915050610671565b60039150505b92915050565b600047905090565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600381526020017f637267000000000000000000000000000000000000000000000000000000000081525090610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c9190612c4b565b60405180910390fd5b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006107758484610ec7565b905081600183805490506107899190612c9c565b8154811061079a57610799612b83565b5b9060005260206000209060040201828460ff16815481106107be576107bd612b83565b5b906000526020600020906004020160008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160149054906101000a900460ff168160020160146101000a81548160ff0219169083600381111561087f5761087e6123fe565b5b021790555060038201548160030155905050818054806108a2576108a1612cd0565b5b600190038181906000526020600020906004020160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff0219169055600382016000905550509055600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff161461095957610958816040015182600001516110cd565b5b8373ffffffffffffffffffffffffffffffffffffffff167fad5886e11c6397c465478a76faf9eeda7d20e573dc2acd0955c54f4b51a208e984426040516109a1929190612cff565b60405180910390a250505050565b6001543410156040518060400160405280600381526020017f61746c000000000000000000000000000000000000000000000000000000000081525090610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a239190612c4b565b60405180910390fd5b50610a356122e8565b3481600001818152505081816020018181525050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836003811115610b3857610b376123fe565b5b02179055506080820151816003015550503373ffffffffffffffffffffffffffffffffffffffff167f0bb8b3c1699d88c3b6dec18d63fc02f194b610b760b178b7292b481906b3ad663442604051610b91929190612d28565b60405180910390a25050565b600260019054906101000a900463ffffffff1681565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610cf557838290600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166003811115610cc657610cc56123fe565b5b6003811115610cd857610cd76123fe565b5b815260200160038201548152505081526020019060010190610c14565b505050509050919050565b600080610d0d8484610ec7565b9050610d1c816080015161216f565b156040518060400160405280600281526020017f746600000000000000000000000000000000000000000000000000000000000081525090610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8b9190612c4b565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e6174000000000000000000000000000000000000000000000000000000000081525090610e41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e389190612c4b565b60405180910390fd5b50806080015142610e529190612c9c565b600260019054906101000a900463ffffffff1663ffffffff16610e759190612c9c565b91505092915050565b600080610e8b8484610ec7565b9050806000015191505092915050565b610ea361219e565b80600260016101000a81548163ffffffff021916908363ffffffff16021790555050565b610ecf6122e8565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508260ff168180549050116040518060400160405280600481526020017f696f6f620000000000000000000000000000000000000000000000000000000081525090610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a9190612c4b565b60405180910390fd5b50808360ff1681548110610faa57610fa9612b83565b5b90600052602060002090600402016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166003811115611052576110516123fe565b5b6003811115611064576110636123fe565b5b815260200160038201548152505091505092915050565b61108361219e565b61108d600061221c565b565b61109761219e565b80600260006101000a81548160ff021916908360ff16021790555050565b6110bd61219e565b8060018190555050565b60015481565b6000600260009054906101000a900460ff1660ff1660646002846110f19190612d51565b6110fb9190612dda565b6111059190612d51565b6002836111129190612d51565b61111c9190612c9c565b9050804710156040518060400160405280600581526020017f6e656d696300000000000000000000000000000000000000000000000000000081525090611199576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111909190612c4b565b60405180910390fd5b508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111e0573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff167f7ca7469714f3e1d8732b3a67b0599fba3be82b826137fcfa805c19afc2b20aeb8242604051611229929190612d28565b60405180910390a2505050565b6000806002848460405160200161124e929190612e4a565b60405160208183030381529060405260405161126a9190612eaa565b602060405180830381855afa158015611287573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906112aa9190612ed6565b90508085146040518060400160405280600281526020017f697000000000000000000000000000000000000000000000000000000000000081525090611326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131d9190612c4b565b60405180910390fd5b5061133184846105a3565b9150509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f636a6700000000000000000000000000000000000000000000000000000000008152509061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114049190612c4b565b60405180910390fd5b506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508260ff168180549050116040518060400160405280600481526020017f696f6f6200000000000000000000000000000000000000000000000000000000815250906114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c99190612c4b565b60405180910390fd5b506000818460ff16815481106114eb576114ea612b83565b5b90600052602060002090600402019050600073ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600381526020017f636a670000000000000000000000000000000000000000000000000000000000815250906115c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bd9190612c4b565b60405180910390fd5b5080600001543410156040518060400160405280600381526020017f61746c000000000000000000000000000000000000000000000000000000000081525090611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163d9190612c4b565b60405180910390fd5b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160020160146101000a81548160ff021916908360038111156116b1576116b06123fe565b5b02179055504281600301819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f70fc8cbbf6bf1c3929b063284d69be02695d9de0c6a918f74b2277d81ee28c4b86344260405161172093929190612f3e565b60405180910390a35050505050565b600061173b8383610ec7565b9050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e73700000000000000000000000000000000000000000000000000000000000815250906117e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e09190612c4b565b60405180910390fd5b506117f7816080015161216f565b6040518060400160405280600381526020017f74737200000000000000000000000000000000000000000000000000000000008152509061186e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118659190612c4b565b60405180910390fd5b50611879838361188c565b6118873382600001516110cd565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905014156040518060400160405280600381526020017f63726700000000000000000000000000000000000000000000000000000000008152509061194f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119469190612c4b565b60405180910390fd5b508160ff168180549050116040518060400160405280600481526020017f696f6f6200000000000000000000000000000000000000000000000000000000815250906119d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c89190612c4b565b60405180910390fd5b5080600182805490506119e49190612c9c565b815481106119f5576119f4612b83565b5b9060005260206000209060040201818360ff1681548110611a1957611a18612b83565b5b906000526020600020906004020160008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160149054906101000a900460ff168160020160146101000a81548160ff02191690836003811115611ada57611ad96123fe565b5b02179055506003820154816003015590505080805480611afd57611afc612cd0565b5b600190038181906000526020600020906004020160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff02191690556003820160009055505090558273ffffffffffffffffffffffffffffffffffffffff167fad5886e11c6397c465478a76faf9eeda7d20e573dc2acd0955c54f4b51a208e98342604051611bb1929190612cff565b60405180910390a2505050565b6000611bca3385610ec7565b9050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600381526020017f6e7370000000000000000000000000000000000000000000000000000000000081525090611c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6f9190612c4b565b60405180910390fd5b506000611c8a82602001518585611236565b9050611c96338661188c565b611caf8183606001513385604001518660000151611cb6565b5050505050565b836003811115611cc957611cc86123fe565b5b856003811115611cdc57611cdb6123fe565b5b03611d7d57611cf783600283611cf29190612dda565b6110cd565b611d0d82600283611d089190612dda565b6110cd565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f0b9941cef1aa10b842b624e5965581bafc13a2025e1030cf301a233a74ce07ec87878542604051611d709493929190612f75565b60405180910390a36120d2565b60016003811115611d9157611d906123fe565b5b856003811115611da457611da36123fe565b5b148015611dd5575060006003811115611dc057611dbf6123fe565b5b846003811115611dd357611dd26123fe565b5b145b80611e34575060006003811115611def57611dee6123fe565b5b856003811115611e0257611e016123fe565b5b148015611e33575060026003811115611e1e57611e1d6123fe565b5b846003811115611e3157611e306123fe565b5b145b5b80611e93575060026003811115611e4e57611e4d6123fe565b5b856003811115611e6157611e606123fe565b5b148015611e92575060016003811115611e7d57611e7c6123fe565b5b846003811115611e9057611e8f6123fe565b5b145b5b15611f1257611ea283826110cd565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec87878542604051611f059493929190612f75565b60405180910390a36120d2565b600380811115611f2557611f246123fe565b5b856003811115611f3857611f376123fe565b5b03611fb757611f4782826110cd565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec86888542604051611faa9493929190612f75565b60405180910390a36120d2565b600380811115611fca57611fc96123fe565b5b846003811115611fdd57611fdc6123fe565b5b0361205c57611fec83826110cd565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec8787854260405161204f9493929190612f75565b60405180910390a36120d2565b61206682826110cd565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f1f0963b195b50f5d46ec758a39bbbcab4167b8077db3aeca518b991899f00bec868885426040516120c99493929190612f75565b60405180910390a35b5050505050565b6120e161219e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612150576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121479061302c565b60405180910390fd5b6121598161221c565b50565b600260009054906101000a900460ff1681565b6000600260019054906101000a900463ffffffff1663ffffffff1682612195919061304c565b42119050919050565b6121a66122e0565b73ffffffffffffffffffffffffffffffffffffffff166121c461133b565b73ffffffffffffffffffffffffffffffffffffffff161461221a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612211906130ee565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a001604052806000815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006003811115612335576123346123fe565b5b8152602001600081525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126123715761237061234c565b5b8235905067ffffffffffffffff81111561238e5761238d612351565b5b6020830191508360018202830111156123aa576123a9612356565b5b9250929050565b600080602083850312156123c8576123c7612342565b5b600083013567ffffffffffffffff8111156123e6576123e5612347565b5b6123f28582860161235b565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061243e5761243d6123fe565b5b50565b600081905061244f8261242d565b919050565b600061245f82612441565b9050919050565b61246f81612454565b82525050565b600060208201905061248a6000830184612466565b92915050565b6000819050919050565b6124a381612490565b82525050565b60006020820190506124be600083018461249a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124ef826124c4565b9050919050565b6124ff816124e4565b811461250a57600080fd5b50565b60008135905061251c816124f6565b92915050565b600060ff82169050919050565b61253881612522565b811461254357600080fd5b50565b6000813590506125558161252f565b92915050565b6000806040838503121561257257612571612342565b5b60006125808582860161250d565b925050602061259185828601612546565b9150509250929050565b6000819050919050565b6125ae8161259b565b81146125b957600080fd5b50565b6000813590506125cb816125a5565b92915050565b6000602082840312156125e7576125e6612342565b5b60006125f5848285016125bc565b91505092915050565b600063ffffffff82169050919050565b612617816125fe565b82525050565b6000602082019050612632600083018461260e565b92915050565b60006020828403121561264e5761264d612342565b5b600061265c8482850161250d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61269a81612490565b82525050565b6126a98161259b565b82525050565b6126b8816124e4565b82525050565b6126c781612454565b82525050565b60a0820160008201516126e36000850182612691565b5060208201516126f660208501826126a0565b50604082015161270960408501826126af565b50606082015161271c60608501826126be565b50608082015161272f6080850182612691565b50505050565b600061274183836126cd565b60a08301905092915050565b6000602082019050919050565b600061276582612665565b61276f8185612670565b935061277a83612681565b8060005b838110156127ab5781516127928882612735565b975061279d8361274d565b92505060018101905061277e565b5085935050505092915050565b600060208201905081810360008301526127d2818461275a565b905092915050565b6127e3816125fe565b81146127ee57600080fd5b50565b600081359050612800816127da565b92915050565b60006020828403121561281c5761281b612342565b5b600061282a848285016127f1565b91505092915050565b60a0820160008201516128496000850182612691565b50602082015161285c60208501826126a0565b50604082015161286f60408501826126af565b50606082015161288260608501826126be565b5060808201516128956080850182612691565b50505050565b600060a0820190506128b06000830184612833565b92915050565b6000602082840312156128cc576128cb612342565b5b60006128da84828501612546565b91505092915050565b6128ec81612490565b81146128f757600080fd5b50565b600081359050612909816128e3565b92915050565b60006020828403121561292557612924612342565b5b6000612933848285016128fa565b91505092915050565b6000806040838503121561295357612952612342565b5b60006129618582860161250d565b9250506020612972858286016128fa565b9150509250929050565b60008060006040848603121561299557612994612342565b5b60006129a3868287016125bc565b935050602084013567ffffffffffffffff8111156129c4576129c3612347565b5b6129d08682870161235b565b92509250509250925092565b6129e5816124e4565b82525050565b6000602082019050612a0060008301846129dc565b92915050565b60048110612a1357600080fd5b50565b600081359050612a2581612a06565b92915050565b600080600060608486031215612a4457612a43612342565b5b6000612a528682870161250d565b9350506020612a6386828701612546565b9250506040612a7486828701612a16565b9150509250925092565b600080600060408486031215612a9757612a96612342565b5b6000612aa586828701612546565b935050602084013567ffffffffffffffff811115612ac657612ac5612347565b5b612ad28682870161235b565b92509250509250925092565b600080600080600060a08688031215612afa57612af9612342565b5b6000612b0888828901612a16565b9550506020612b1988828901612a16565b9450506040612b2a8882890161250d565b9350506060612b3b8882890161250d565b9250506080612b4c888289016128fa565b9150509295509295909350565b612b6281612522565b82525050565b6000602082019050612b7d6000830184612b59565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015612bec578082015181840152602081019050612bd1565b83811115612bfb576000848401525b50505050565b6000601f19601f8301169050919050565b6000612c1d82612bb2565b612c278185612bbd565b9350612c37818560208601612bce565b612c4081612c01565b840191505092915050565b60006020820190508181036000830152612c658184612c12565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ca782612490565b9150612cb283612490565b925082821015612cc557612cc4612c6d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000604082019050612d146000830185612b59565b612d21602083018461249a565b9392505050565b6000604082019050612d3d600083018561249a565b612d4a602083018461249a565b9392505050565b6000612d5c82612490565b9150612d6783612490565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612da057612d9f612c6d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612de582612490565b9150612df083612490565b925082612e0057612dff612dab565b5b828204905092915050565b600081905092915050565b82818337600083830152505050565b6000612e318385612e0b565b9350612e3e838584612e16565b82840190509392505050565b6000612e57828486612e25565b91508190509392505050565b600081519050919050565b600081905092915050565b6000612e8482612e63565b612e8e8185612e6e565b9350612e9e818560208601612bce565b80840191505092915050565b6000612eb68284612e79565b915081905092915050565b600081519050612ed0816125a5565b92915050565b600060208284031215612eec57612eeb612342565b5b6000612efa84828501612ec1565b91505092915050565b6000819050919050565b6000612f28612f23612f1e84612522565b612f03565b612490565b9050919050565b612f3881612f0d565b82525050565b6000606082019050612f536000830186612f2f565b612f60602083018561249a565b612f6d604083018461249a565b949350505050565b6000608082019050612f8a6000830187612466565b612f976020830186612466565b612fa4604083018561249a565b612fb1606083018461249a565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613016602683612bbd565b915061302182612fba565b604082019050919050565b6000602082019050818103600083015261304581613009565b9050919050565b600061305782612490565b915061306283612490565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561309757613096612c6d565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006130d8602083612bbd565b91506130e3826130a2565b602082019050919050565b60006020820190508181036000830152613107816130cb565b905091905056fea2646970667358221220b53e9b60b78f14b6e1bf677552865f583bb2a73fd71d9508e2f26d94a11c56cd64736f6c634300080f0033";

type RPSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RPSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RPS__factory extends ContractFactory {
  constructor(...args: RPSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RPS> {
    return super.deploy(overrides || {}) as Promise<RPS>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RPS {
    return super.attach(address) as RPS;
  }
  override connect(signer: Signer): RPS__factory {
    return super.connect(signer) as RPS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RPSInterface {
    return new utils.Interface(_abi) as RPSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RPS {
    return new Contract(address, _abi, signerOrProvider) as RPS;
  }
}
